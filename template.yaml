AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Note Share Project

# More info about Parameters: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
Parameters:
  Stage:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Api:
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'Content-Type,Authorization'"
      AllowOrigin: "'*'"
    EndpointConfiguration:
      Type: REGIONAL
    TracingEnabled: true
  Function:
    Runtime: python3.9
    Timeout: 10

Resources:
  RestApi:
    Type: AWS::Serverless::Api
    Description: Note Share API
    Properties:
      StageName: !Ref Stage
      OpenApiVersion: 3.0.1 # Fix issue with extra stage

  NotesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'NotesTable-${Stage}'
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  ResponseLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub '${AWS::StackName}-Repository-${Stage}'
      ContentUri: layers/response/

  DatabaseLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub '${AWS::StackName}-Database-${Stage}'
      ContentUri: layers/database/

  FindPublicNotesFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Sub '${AWS::StackName}-FindPublicNotes-${Stage}'
      Description: Returns public notes.
      CodeUri: find_public_notes/
      Handler: app.find_public_notes
      Tracing: Active
      Layers:
        - !Ref DatabaseLayer
        - !Ref ResponseLayer
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Sub 'NotesTable-${Stage}'
      Environment:
        Variables:
          TABLE_NAME: !Sub 'NotesTable-${Stage}'
      Events:
        FindPublicNotesEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /notes
            Method: get
            RestApiId: !Ref RestApi

  GetNoteTypeFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-GetNoteType-${Stage}'
      Description: Returns type of the note.
      CodeUri: get_note_type/
      Handler: app.get_note_type
      Tracing: Active
      Layers:
        - !Ref DatabaseLayer
        - !Ref ResponseLayer
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Sub 'NotesTable-${Stage}'
      Environment:
        Variables:
          TABLE_NAME: !Sub 'NotesTable-${Stage}'
      Events:
        GetNoteTypeEvent:
          Type: Api
          Properties:
            Path: /notes/{id}/type
            Method: get
            RestApiId: !Ref RestApi

  GetNoteFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-GetNote-${Stage}'
      Description: Returns note data.
      CodeUri: get_note/
      Handler: app.get_note
      Tracing: Active
      Layers:
        - !Ref DatabaseLayer
        - !Ref ResponseLayer
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Sub 'NotesTable-${Stage}'
      Environment:
        Variables:
          TABLE_NAME: !Sub 'NotesTable-${Stage}'
      Events:
        GetNoteEvent:
          Type: Api
          Properties:
            Path: /notes/{id}
            Method: get
            RestApiId: !Ref RestApi

  SaveNoteFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-SaveNote-${Stage}'
      Description: Save new note.
      CodeUri: save_note/
      Handler: app.save_note
      Tracing: Active
      Layers:
        - !Ref DatabaseLayer
        - !Ref ResponseLayer
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Sub 'NotesTable-${Stage}'
      Environment:
        Variables:
          TABLE_NAME: !Sub 'NotesTable-${Stage}'
      Events:
        SaveNoteEvent:
          Type: Api
          Properties:
            Path: /notes
            Method: post
            RestApiId: !Ref RestApi

  TestDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-TestData-${Stage}'
      Description: Load test data.
      CodeUri: test_data/
      Handler: app.test_data
      Layers:
        - !Ref DatabaseLayer
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Sub 'NotesTable-${Stage}'
      Environment:
        Variables:
          TABLE_NAME: !Sub 'NotesTable-${Stage}'

Outputs:
  RestApi:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/${RestApi.Stage}"
